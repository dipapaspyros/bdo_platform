# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-10-06 10:05
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):
    def update_services_info(apps, schema_editor):
        Service = apps.get_model('bdo_main_app', 'Service')
        clustering = Service.objects.get(title='k-means Clustering')
        clustering.info = {"extendable": "True", "parameters": [{"description": "Set the number of clusters", "title": "K", "default": "2", "min": "2", "type": "INT", "name": "k"}, {"description": "max number of iterations (>= 0).", "title": "Max Iterations", "default": "20", "min": "0", "type": "INT", "name": "maxIter"}], "package": "pyspark.ml.clustering", "arg_format": "Features", "type": "Estimator", "needs_feat_assembling": "True", "arguments": [{"type": "QUERY", "name": "query", "title": "Query"}, {"extendable": "False", "type": "COLUMN", "name": "feat_1", "title": "Feature 1"}, {"extendable": "True", "type": "COLUMN", "name": "feat_2", "title": "Feature 2"}], "output": [{"tolist": "2", "description": "TODO: Provide a description", "type": "method", "name": "clusterCenters", "title": "Cluster Centers"}], "from_mlib": "True", "class": "KMeans"}
        clustering.job_name = 'linear_regression'
        clustering.save()

        quantile_discr = Service.objects.get(title='Quantile Discretization')
        quantile_discr.info = {"extendable": "True", "parameters": [{"default": "discretized", "description": "Name of output column", "type": "STRING", "name": "outputCol", "title": "Name of output column"}, {"description": "number of discrete buckets to be used", "title": "Number of Buckets", "default": "2", "min": "2", "type": "INT", "name": "numBuckets"}], "package": "pyspark.ml.feature", "arg_format": "Input-Output", "type": "Estimator-Transformer", "needs_feat_assembling": "False", "arguments": [{"type": "QUERY", "name": "query", "title": "Query"}, {"extendable": "False", "type": "COLUMN", "name": "inputCol", "title": "Input Column"}], "output": [], "from_mlib": "True", "class": "QuantileDiscretizer"}
        quantile_discr.job_name = 'linear_regression'
        quantile_discr.save()

        regression = Service.objects.get(title='Regression')
        regression.info = {"extendable": "True", "parameters": [{"description": "max number of iterations (>= 0).", "title": "Max Iterations", "default": "100", "min": "0", "type": "INT", "name": "maxIter"}], "package": "pyspark.ml.regression", "arg_format": "Feature-Label", "type": "Estimator", "needs_feat_assembling": "True", "arguments": [{"type": "QUERY", "name": "query", "title": "Query"}, {"extendable": "True", "type": "COLUMN", "name": "feat_1", "title": "Feature"}, {"extendable": "False", "type": "COLUMN", "name": "labelCol", "title": "Label"}], "output": [{"tolist": "1", "description": "TODO: Provide a description", "type": "attribute", "name": "coefficients", "title": "Coefficient"}, {"tolist": "0", "description": "TODO: Provide a description", "type": "attribute", "name": "intercept", "title": "Intercept"}], "from_mlib": "True", "class": "LinearRegression"}
        regression.job_name = 'linear_regression'
        regression.save()



    dependencies = [
        ('bdo_main_app', '0004_auto_20170922_1341'),
    ]

    operations = [
        migrations.RunPython(update_services_info),
    ]
